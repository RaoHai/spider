{"version":3,"sources":["webpack:///./examples/cluster.js"],"names":[],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,KAAM,QAAQ,IAAR;AACN,KAAM,SAAS,GAAT;AACN,KAAM,KAAK,QAAQ,CAAR;AACX,KAAM,KAAK,SAAS,CAAT;;qBAE0B,mBAAO,KAAP;KAA7B;KAAM;KAAQ;KAAM;;;AAE5B,UAAS,WAAT,CAAqB,IAArB,EAA2B;AACzB,UAAQ;AAAC,SAAD;OAAM,OAAM,KAAN,EAAY,QAAO,KAAP,EAAlB;KACN,8BAAC,MAAD,OADM;KAEN;AAAC,WAAD;SAAM,QAAQ,CAAC,CAAD,EAAI,CAAJ,CAAR;AACJ,qBAAY,KAAK,CAAL,GAAS,GAAT,GAAe,OAAf,GAAyB,KAAzB;AACZ,oBAAW,KAAK,CAAL,GAAS,GAAT,GAAe,IAAf,GAAsB,IAAI,mBAAO,SAAP,EAAJ,CAAuB,MAAvB,CAA8B,GAA9B,CAAtB;QAFb;OAGE,KAAK,IAAL;MALI;IAAR,CADyB;EAA3B;;AAUA,UAAS,UAAT,CAAqB,CAArB,EAAwB;AACtB,UAAO,CAAC,EAAE,CAAF,EAAK,EAAE,CAAF,GAAM,GAAN,GAAY,KAAK,EAAL,CAAzB,CADsB;EAAxB;AAGA,UAAS,MAAT,CAAiB,IAAjB,EAAuB;AACrB,OAAI,IAAI,WAAW,KAAX,CAAiB,IAAjB,EAAuB,SAAvB,CAAJ;OAAuC,IAAI,EAAE,CAAF,CAAJ;OAAU,IAAI,EAAE,CAAF,IAAO,KAAK,EAAL,GAAU,CAAV,CAD3C;AAErB,UAAO,CAAE,IAAI,KAAK,GAAL,CAAS,CAAT,CAAJ,EAAiB,IAAI,KAAK,GAAL,CAAS,CAAT,CAAJ,CAA1B,CAFqB;EAAvB;;AAKA,UAAS,WAAT,CAAsB,IAAtB,EAA4B;AAC1B,UAAO,8BAAC,IAAD,IAAM,YAAY,MAAZ,EAAoB,MAAM,IAAN,EAA1B,CAAP,CAD0B;EAA5B;;AAIA,KAAM,OAAO,IAAI,OAAJ,CAAY,cAAZ,CAAP;AACN,OAAM,IAAN,EAAY,IAAZ,CAAiB;UAAY,SAAS,IAAT;EAAZ,CAAjB,CACG,IADH,CACQ,oBAAY;AAChB,OAAM,OAAO,QAAP,CADU;AAEhB,OAAM,UAAU,mBAAO,MAAP,CAAc,OAAd,GAAwB,IAAxB,CAA6B,CAAC,GAAD,EAAM,KAAK,GAAL,CAAnC,CAAV,CAFU;AAGhB,OAAM,OAAO,QAAQ,IAAR,CAAa,IAAb,CAAP,CAHU;AAIhB,sBAAS,MAAT,CAAgB,oDAAQ,OAAO,KAAP,EAAc,QAAQ,MAAR,EAAgB,YAAY,IAAZ;AAC9B,aAAQ,CAAC,EAAD,EAAK,EAAL,CAAR;AACA,gBAAW;cAAK,IAAI,mBAAO,SAAP,EAAJ,CAAuB,MAAvB,CAA8B,EAAE,CAAF,GAAM,EAAN,CAA9B,CAAwC,SAAxC,CAAkD,EAAE,CAAF;MAAvD;AACX,kBAAa,WAAb;AACA,kBAAa,WAAb;IAJR,CAAhB,EAKI,SAAS,cAAT,CAAwB,iBAAxB,CALJ,EAJgB;EAAZ,CADR,C","file":"cluster.js","sourcesContent":["import 'normalize.css';\nimport Spider from 'rc-spider';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst width = 1280;\nconst height = 800;\nconst rx = width / 2;\nconst ry = height / 2;\n\nconst { Node, Circle, Text, Link } = Spider.Shape;\n\nfunction nodeCreator(data) {\n  return (<Node width=\"4.5\" height=\"4.5\">\n    <Circle />\n    <Text offset={[8, 3]}\n      textAnthor={data.x < 180 ? 'start' : 'end'}\n      transform={data.x < 180 ? null : new Spider.Transform().rotate(180) }\n    >{data.name}</Text>\n  </Node>);\n}\n\nfunction projection (d) {\n  return [d.y, d.x / 180 * Math.PI]\n}\nfunction radial (data) {\n  var d = projection.apply(this, arguments), r = d[0], a = d[1] - Math.PI / 2;\n  return [ r * Math.cos(a), r * Math.sin(a) ];\n}\n\nfunction linkCreator (data) {\n  return <Link projection={radial} data={data}/>;\n}\n\nconst data = new Request('./flare.json');\nfetch(data).then(response => response.json())\n  .then(response => {\n    const tree = response;\n    const cluster = Spider.layout.cluster().size([360, ry - 120]);\n    const data = cluster.data(tree);\n    ReactDOM.render(<Spider width={width} height={height} dataSource={data}\n                            offset={[rx, ry]}\n                            transform={d => new Spider.Transform().rotate(d.x - 90).translate(d.y)}\n                            nodeCreator={nodeCreator}\n                            linkCreator={linkCreator}\n    />, document.getElementById('__react-content'));\n  });\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./examples/cluster.js\n **/"],"sourceRoot":""}